from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from loguru import logger
from bson import ObjectId

from app.filters.admin import AdminFilter
from app.states.admin_states import UserSearch
from app.keyboards import get_search_keyboard
from app.database.repositories import UserRepository, TransactionRepository, ProductRepository


router = Router()
router.message.filter(AdminFilter())
router.callback_query.filter(AdminFilter())


@router.message(Command("search"))
async def cmd_search(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    await message.answer(
        "üîç <b>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —á–µ–∫–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:",
        reply_markup=get_search_keyboard(),
        parse_mode=ParseMode.HTML
    )


@router.message(F.text == "üîç –ü–æ–∏—Å–∫ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def search_by_user_id(message: Message, state: FSMContext):
    """–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID"""
    await state.set_state(UserSearch.enter_user_id)
    await message.answer(
        "üîç <b>–ü–æ–∏—Å–∫ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>1257601441</code>\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel",
        parse_mode=ParseMode.HTML
    )


@router.message(F.text == "üßæ –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —á–µ–∫–∞")
async def search_by_receipt(message: Message, state: FSMContext):
    """–ü–æ–∏—Å–∫ —á–µ–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É"""
    await state.set_state(UserSearch.enter_receipt_id)
    await message.answer(
        "üßæ <b>–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —á–µ–∫–∞</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —á–µ–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>1110685899966612</code>\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel",
        parse_mode=ParseMode.HTML
    )


@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_admin_panel(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    from app.handlers.admin_panel import cmd_admin_panel
    await cmd_admin_panel(message)


@router.message(UserSearch.enter_user_id)
async def process_user_id(message: Message, state: FSMContext, user_repo: UserRepository, transaction_repo: TransactionRepository):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.text.strip()
    
    if user_id == "/cancel":
        await state.clear()
        await message.answer("‚ùå –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω")
        return
    
    try:
        user_id = int(user_id)
        user = await user_repo.get_user(user_id)
        
        if not user:
            await message.answer(
                "‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{user_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
                parse_mode=ParseMode.HTML
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        transactions = await transaction_repo.get_user_transactions(user_id, limit=5)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üí≥ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data=f"admin:edit_balance:{user.user_id}"),
                InlineKeyboardButton(text="üí∞ –í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å", callback_data=f"admin:give_balance:{user.user_id}")
            ],
            [
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin:search_back")
            ]
        ])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = (
            f"üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>\n\n"
            f"üÜî ID: <code>{user.user_id}</code>\n"
            f"üë§ –õ–æ–≥–∏–Ω: @{user.username or '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n"
            f"üë§ –ò–º—è: {user.first_name or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{user.balance:.2f}‚ÇΩ</b>\n"
            f"üõí –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <b>{user.purchases}—à—Ç</b>\n"
            f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <b>{'‚úÖ –î–∞' if user.is_admin else '‚ùå –ù–µ—Ç'}</b>\n\n"
            f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user.created_at.strftime('%d.%m.%Y')}\n"
            f"üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user.last_active.strftime('%d.%m.%Y %H:%M:%S')}\n\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
        if transactions:
            user_info += "<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</b>\n"
            for tx in transactions:
                tx_type = "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" if tx.type == "deposit" else "üõí –ü–æ–∫—É–ø–∫–∞"
                tx_status = {
                    "pending": "‚è≥ –í –æ–∂–∏–¥–∞–Ω–∏–∏",
                    "completed": "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                    "canceled": "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
                }.get(tx.status, tx.status)
                
                user_info += (
                    f"- {tx_type}: {tx.amount:.2f}‚ÇΩ ({tx_status})\n"
                    f"  –î–∞—Ç–∞: {tx.created_at.strftime('%d.%m.%Y %H:%M:%S')}\n"
                )
                
                if tx.receipt_id:
                    user_info += f"  –ß–µ–∫: <code>{tx.receipt_id}</code>\n"
                
                user_info += "\n"
        else:
            user_info += "<b>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>"
        
        await message.answer(user_info, reply_markup=keyboard, parse_mode=ParseMode.HTML)
        await state.clear()
        
    except ValueError:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID</b>\n\n"
            "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
            parse_mode=ParseMode.HTML
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.",
            parse_mode=ParseMode.HTML
        )
        await state.clear()


@router.message(UserSearch.enter_receipt_id)
async def process_receipt_id(message: Message, state: FSMContext, transaction_repo: TransactionRepository, user_repo: UserRepository, product_repo: ProductRepository):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —á–µ–∫–∞"""
    receipt_id = message.text.strip()
    
    if receipt_id == "/cancel":
        await state.clear()
        await message.answer("‚ùå –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω")
        return
    
    try:
        # –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ –Ω–æ–º–µ—Ä—É —á–µ–∫–∞
        transaction = await transaction_repo.get_transaction_by_receipt(receipt_id)
        
        if not transaction:
            await message.answer(
                "‚ùå <b>–ß–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
                f"–ß–µ–∫ —Å –Ω–æ–º–µ—Ä–æ–º <code>{receipt_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
                parse_mode=ParseMode.HTML
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = await user_repo.get_user(transaction.user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–∫—É–ø–∫–∞
        product_info = ""
        if transaction.type == "purchase" and transaction.product_id:
            product = await product_repo.get_product(transaction.product_id)
            if product:
                product_info = (
                    f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <b>{product.name}</b>\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {product.description or '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n"
                    f"üí∞ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: <b>{product.price:.2f}‚ÇΩ</b>\n\n"
                )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–µ
        tx_type = "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" if transaction.type == "deposit" else "üõí –ü–æ–∫—É–ø–∫–∞"
        tx_status = {
            "pending": "‚è≥ –í –æ–∂–∏–¥–∞–Ω–∏–∏",
            "completed": "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
            "canceled": "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
        }.get(transaction.status, transaction.status)
        
        receipt_info = (
            f"üßæ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–∫–µ</b>\n\n"
            f"üÜî –ù–æ–º–µ—Ä —á–µ–∫–∞: <code>{receipt_id}</code>\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user.first_name or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</b> | <code>{user.user_id}</code>\n"
            f"üí∞ –°—É–º–º–∞: <b>{transaction.amount:.2f}‚ÇΩ</b>\n"
            f"üìã –¢–∏–ø: <b>{tx_type}</b>\n"
            f"üìä –°—Ç–∞—Ç—É—Å: <b>{tx_status}</b>\n"
            f"üìÖ –î–∞—Ç–∞: {transaction.created_at.strftime('%d.%m.%Y %H:%M:%S')}\n\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        if product_info:
            receipt_info += f"{product_info}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–æ—Å–æ–±–µ –æ–ø–ª–∞—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
        if transaction.payment_method:
            receipt_info += f"üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: <b>{transaction.payment_method}</b>\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        if transaction.payment_id:
            receipt_info += f"üÜî ID –ø–ª–∞—Ç–µ–∂–∞: <code>{transaction.payment_id}</code>\n"
        
        await message.answer(receipt_info, parse_mode=ParseMode.HTML)
        await state.clear()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–µ–∫–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–µ–∫–∞</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.",
            parse_mode=ParseMode.HTML
        )
        await state.clear()